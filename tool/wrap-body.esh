# Generates a file with name given in the [first argument]
# by wrapping the contents  of the file given in the [second argument]
# into the wrapper contents of the file given in the [third argument].
#
# The file in the [second argument] should contain Org babel source block
# Dart code, placed between begin_src..end_src.
#
# The wrapper file in the [third argument] should contain the wrapper
# Dart code in ob-dart function 'ob-dart-wrapper'
# or 'ob-dart-with-main-body-wrapper'.
# This wrapper provides a zone to output/not output
# print statements from code in the second argument.

if ${ not { = {length $*} 4 } } {
    echo "Invalid arguments: $*"
    echo "Usage: $0  generated-file.dart  body.dart  wrapper.dwrap wrapper-imports.dwrap"
} {
    if ${ not { file-exists-p $2 || file-exists-p $3 } } {
        echo "File $2 or $3 does not exist."
    } {
        echo "Inside ./wrap-body.esh : 10"

        setq generated-file $1
        setq body "${cat $2}"
        setq ob-dart-wrapper "${cat $3}"
        setq ob-dart-wrapper-imports "${cat $4}"

        echo "Inside ./wrap-body.esh : 20"

        echo "file to generate        name:     $generated-file"
        echo "body                    contents: $body"
        echo "ob-dart-wrapper         contents: $ob-dart-wrapper"
        echo "ob-dart-wrapper-imports contents: $ob-dart-wrapper-imports"

        echo "Inside ./wrap-body.esh : 30"

        # check if ob-dart-wrapper contains string %s
        (if (not (string-match-p "\%s" ob-dart-wrapper))
         (error "ob-dart-wrapper: does not contain \%s"))

        echo "Inside ./wrap-body.esh : 40"

        # Generate the Dart code in tmp-generated-dart.
        # Must run from 'tool' directory.
        (load-file "../ob-dart.el")
        (ob-dart-write-dart-file-from body generated-file)

        echo "Inside ./wrap-body.esh : 50 - END"
    }
}

# test wrapping
# $(format-spec "foo %b bar" '((?b . "zot")) nil t)(:j)
# setq body "my body"
# setq ob-dart-wrapper " aa %a ww %w ss %s aa again %a end"
#
#  $(format-spec
#                   ob-dart-wrapper
#                   `((?a . "async ") (?w . "await ") (?s . ,body))
#                   nil
#                   nil)
# NO (:j)
#   aa  async   ww  await   ss  my body  end: command not found

